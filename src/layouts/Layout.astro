---
const theAside = "the-aside-for-every-situation";
import ruizamAvatar from '@/assets/avatar.png';
import ThemeToggle from '@/components/theme-toggle/ThemeToggleWrapper.astro';
import MyNavbar from '@/components/my-navbar/NavbarWrapper.astro';
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>armandoruiz.dev</title>
	</head>
	<body>
		<main class="main-layout">
			<section class="main-section">
				<div class="interactive-avatar-container absolute-position">
					<div class="ruizam-avatar">
						<div class="dialog-bubble-wrapper">
							<div class="dialog-bubble">
								<span class="comic-dialog">Hello there! Welcome to my site!</span>
							</div>
						</div>
						<img class="ruizam-avatar__image" src={ruizamAvatar.src} alt="@ruizam avatar">
					</div>
					<div class="ruizam-avatar__header">
						<a href="https://ruiz7am.github.io/ruizam/">
							<h1 class="ruizam-avatar__header-title">Armando Ruiz</h1>
							<h2 class="ruizam-avatar__header-subtitle">&nbsp;&nbsp;Frontend Developer</h2>
						</a>
					</div>
				</div>
				<slot />
				
			</section>
			<aside class={theAside}>
				<MyNavbar/>
			</aside>
			<ThemeToggle class="main-theme-toggle" id="theme-toggle-wrapper" />
		</main>
		<script>
			/**
			 * @param {{ isShrunk: boolean, isVerticalLayout: boolean }} layoutState
			 */
			function updateThemeToggleDisplay({ isShrunk, isVerticalLayout }: { isShrunk: boolean; isVerticalLayout: boolean }) {
				const toggle = document.querySelector("theme-toggle");
				if (toggle) {
					if (toggle instanceof HTMLElement) {
						toggle.style.display = (isShrunk && isVerticalLayout) ? "none" : "inline-block";
					}
				}
			}
		
			let lastLayoutState = { isShrunk: false, isVerticalLayout: false };
		
			// Escucha el evento del layout
			window.addEventListener("layout-shrink-change", (e) => {
				lastLayoutState = (e as CustomEvent).detail;
				updateThemeToggleDisplay(lastLayoutState);
			});
		
			// Observa cuándo aparece el theme-toggle
			const observer = new MutationObserver(() => {
				const toggle = document.querySelector("theme-toggle");
				if (toggle) {
					updateThemeToggleDisplay(lastLayoutState);
				}
			});
		
		observer.observe(document.body, {
				childList: true,
				subtree: true,
			});
		</script>
		
	</body>
</html>

<style>
	/* main layout & main section */
	.main-layout {
		position: relative;
		display: flex;
		justify-content: space-between;
		width: 100vw;
		height: 100vh;
		background-color: var(--main-layout-bg);
	}
	.main-section {
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 94%;
		height: 100vh;
		background-color: var(--main-section-bg);
		border: 1px solid rgba(0,0,0,0.3);
		border-radius: 0px 38px 38px 0px;
		box-shadow:  var(--main-section-shadow);
		overflow: hidden;
	}

	.main-section::before,
	.main-section::after {
		content: "";
		position: absolute;
		left: 0;
		width: 100%;
		height: 20px;
		pointer-events: none;
		z-index: 1;
	}

	.main-section::before {
		top: 0;
		box-shadow: inset 0 10px 15px -5px rgba(0, 0, 0, 0.35);
	}
	.main-section::after {
		bottom: 0;
		box-shadow: inset 0 -10px 15px -5px rgba(0, 0, 0, 0.35);
	}

	/* Avatar styles */
	.absolute-position {
		position: absolute;
	}
	.interactive-avatar-container {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 1%;
		top: 7%;
		left: 50%;
		width: 100%;
		transform: translateX(-50%);
		z-index: 4;
	}

	@keyframes showDialog {
		from {
			opacity: 0;
			transform: translateX(0) scale(0);
		}
		to {
			opacity: 1;
			transform: translateX(-40px) scale(1);
		}
	}

	@keyframes hideDialog {
		from {
			opacity: 1;
			transform: translateX(-40px) scale(1);
		}
		to {
			opacity: 0;
			transform: translateX(0) scale(0);
		}
	}

	.dialog-bubble-wrapper {
		position: absolute;
		left: -90%;
		top: -40px;
		color: var(--black);
		font-family: var(--font-dialog-balloon);
		font-size: 1.4rem;
		line-height: 110%;
		text-align: center;
		opacity: 0;
		transform: scale(0);
		transition: opacity 300ms, transform 300ms;
		pointer-events: none;
		z-index: 1000;
	}

	.dialog-bubble-wrapper.active {
		animation: showDialog 400ms forwards ease-out;
		pointer-events: auto;
	}

	.dialog-bubble-wrapper.hide {
		animation: hideDialog 300ms forwards ease-in;
	}

	.dialog-bubble {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 125px;
		aspect-ratio: 1.37 / 1;
		background-image: url("/images/dialog-balloon.svg");
		background-repeat: no-repeat;
		background-size: cover;
		background-position: center;
	}

	.comic-dialog {
		display: inline-block;
		width: 85%;
	}

	.ruizam-avatar {
		position: relative;
		width: 120px;
		height: fit-content;
	}
	.ruizam-avatar__image {
		width: 100%;
		object-fit: cover;
		transition: transform 500ms;
		cursor: pointer
	}
	.ruizam-avatar__header {
		font-weight: 400;
		font-style: normal;
	}
	.ruizam-avatar__header a {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}
	.ruizam-avatar__header-title {
		font-family: var(--font-heading);
		font-size: 7rem;
		line-height: 85%;
	}
	.ruizam-avatar__header-subtitle {
		font-size: 3rem;
		font-family: var(--font-body);
		font-weight: 300;
		font-style: normal;
	}
	.ruizam-avatar__header-description {
		font-size: 2.4rem;
	}
	/* .avatar-transform {
		transform: rotate(360deg);
	} */
	/* --- */

	.the-aside-for-every-situation {
		/* position: relative; */
		display: flex;
		padding-inline: 30px;
	}

	.inactive {
		display: none;
	}
	
	@media (hover: hover) {
		.ruizam-avatar:hover .ruizam-avatar__image {
			transform: scale(1.2);
		}
	}
	@media (max-width: 1920px) {
		.ruizam-avatar {
			width: 100px;
		}
		.ruizam-avatar__header-title {
			font-size: 6rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 2.7rem;
		}
	}
	@media (max-width: 1440px) {
		.ruizam-avatar {
			width: 96px;
		}
		.ruizam-avatar__header-title {
			font-size: 5.8rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 2.6rem;
		}
	}
	
	@media (max-width: 1366px) {
		.ruizam-avatar {
			width: 94px;
		}
		.dialog-bubble-wrapper {
			left: -70%;
			font-size: 1.3rem;
		}
		.dialog-bubble {
			width: 100px;
		}
		.ruizam-avatar__header-title {
			font-size: 5.6rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 2.5rem;
		}
	}

	@media (max-width: 1280px) {
		.ruizam-avatar {
			width: 92px;
		}
		.ruizam-avatar__header-title {
			font-size: 5.4rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 2.4rem;
		}
	}
	@media (max-width: 1024px) {
		.ruizam-avatar {
			width: 90px;
		}
		.ruizam-avatar__header-title {
			font-size: 5.2rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 2.3rem;
		}
	}

	@media (max-width: 900px) {
		.ruizam-avatar {
			width: 88px;
		}
		.ruizam-avatar__header-title {
			font-size: 5rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 2.2rem;
		}
	}

	@media (max-width: 768px) {
		.main-layout {
			flex-direction: column;
		}
		.the-aside-for-every-situation {
			height: fit-content;
			justify-content: space-evenly;
			padding: 0;
		}
		.main-section{
			width: 100vw;
			height: 90%;
			margin-block-end: 50px;
			border-radius: 0px 0px 30px 30px;
		}
		.main-section::before {
		top: 0;
		box-shadow: inset 0 0 0 0 rgba(0, 0, 0, 0);
	}
	.main-section::after {
		bottom: 0;
		box-shadow: inset 0 -10px 12px -8px rgba(0, 0, 0, 0.20);
	}
		.ruizam-avatar {
			width: 86px;
		}
		.dialog-bubble-wrapper {
			top: -30px;
			left: -55%;
			font-size: 1.2rem;
		}
		.dialog-bubble {
			width: 90px;
		}
		.ruizam-avatar__header {
			display: flex;
			flex-direction: column;
		}
		.ruizam-avatar__header-title {
			font-size: 4.8rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 2.1rem;
		}
		.ruizam-avatar__header-description {
			font-size: 2rem;
		}
	} 
	@media (orientation: landscape) and (max-height: 600px) {
		.main-layout{
			height: fit-content;
		}
		.main-section{
			height: fit-content;
		}
	}
	@media (max-width: 600px) {
		.interactive-avatar-container {
			top: 10%;
		}
		.ruizam-avatar {
			width: 75px;
		}
		.ruizam-avatar__header-title {
			font-size: 4.5rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 2.1rem;
		}
	}
	@media (max-width: 480px) {
		.interactive-avatar-container {
			top: 14%;
		}
		.ruizam-avatar {
			width: 68px;
		}
		.dialog-bubble-wrapper {
			top: -50px;
			left: -30%;
			font-size: 1rem;
		}
		.dialog-bubble {
			width: 75px;
		}
		.ruizam-avatar__header-title {
			font-size: 4.2rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 1.8rem;
			letter-spacing: 1px;
		}
	}
	@media (max-width: 430px) {
		.ruizam-avatar {
			width: 60px;
		}
		.ruizam-avatar__header-title {
			font-size: 3.7rem;
		}
		.ruizam-avatar__header-subtitle {
			font-size: 1.6rem;
			letter-spacing: 1px;
		}
	}
</style>

<script is:inline>
	const ruizamAvatar = document.querySelector('.ruizam-avatar');
	const dialogBubbleWrapper = document.querySelector('.dialog-bubble-wrapper');

	if (ruizamAvatar && dialogBubbleWrapper) {
		ruizamAvatar.addEventListener('click', () => {
			// Evita múltiples clics locos
			dialogBubbleWrapper.classList.remove('hide');
			dialogBubbleWrapper.classList.add('active');

			// Después de 3 segundos se oculta con animación
			setTimeout(() => {
				dialogBubbleWrapper.classList.remove('active');
				dialogBubbleWrapper.classList.add('hide');
			}, 3000);
		});
	}

	window.addEventListener("layout-shrink-change", (e) => {
	setTimeout(() => {
		const { isShrunk, isVerticalLayout } = e.detail;
		const wrapper = document.getElementById("theme-toggle-wrapper");
		if (wrapper) {
			wrapper.style.display = (isShrunk && isVerticalLayout) ? "none" : "inline-block";
		}
	}, 0);
});

</script>
